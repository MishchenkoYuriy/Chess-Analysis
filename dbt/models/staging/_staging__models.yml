
version: 2

models:
  - name: stg__chess_games
    config:
      contract:
        enforced: true
    columns:
    - name: game_id
      data_type: int64
      tests:
        - unique
        - not_null
        - tableau_row_limit

    - name: event
      data_type: string
      tests:
        - not_null
        - accepted_values:
            values: ['Classical', 'Blitz', 'Bullet']
            severity: warn

    - name: result
      data_type: string
      tests:
        - not_null
        - accepted_values:
            values: ['1-0', '0-1', '1/2-1/2']
            severity: warn

    - name: opening
      data_type: string
      tests:
        - not_null

    - name: termination
      data_type: string
      tests:
        - accepted_values:
            values: ['Normal', 'Time forfeit']
            severity: warn

    - name: tournament
      data_type: bool
      tests:
        - not_null



  - name: stg__chess_moves
    config:
      contract:
        enforced: true
    tests:
      - capture_limit_total
      - pawn_promotion_limit_total
      - castling_limit_total
      - checkmate_is_last_move
    columns:
      - name: move_id
        data_type: int64
        tests:
          - unique
          - not_null
          - tableau_row_limit

      - name: game_id
        data_type: int64
        tests:
          - not_null
          - relationships:
                to: ref('stg__chess_games')
                field: game_id

      - name: move_num
        data_type: int64
        tests:
          - not_null

      - name: player
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2]
              quote: false
          - name: first_move_is_not_black
            tags: [custom]
            test_name: accepted_values
            values: [1]
            quote: false
            where: 'move_num = 1'

      - name: move
        data_type: string
        tests:
          - not_null

      - name: castling
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [0, 1, 2]
              quote: false
          - name: castling_made_by_not_a_king
            tags: [custom]
            test_name: accepted_values
            values: [0]
            quote: false
            where: 'piece_name <> 1'

      - name: piece_name
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6]
              quote: false
          - name: first_move_by_king_queen_rook_or_bishop
            tags: [custom]
            test_name: accepted_values
            values: [5, 6]
            quote: false
            where: 'move_num = 1'

      - name: capture
        data_type: bool
        tests:
          - not_null
          - capture_limit_per_player
          - name: capture_with_castling
            tags: [custom]
            test_name: accepted_values
            values: [false]
            quote: false
            where: 'castling <> 0'

      - name: pawn_promotion
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [0, 2, 3, 4, 5]
              quote: false
          - name: pawn_promotion_made_by_not_a_pawn
            tags: [custom]
            test_name: accepted_values
            values: [0]
            quote: false
            where: 'piece_name <> 6'

      - name: position
        data_type: int64
        tests:
          - not_null
          - one_checkmate_per_game
          - accepted_values:
              values: [0, 1, 2]
              quote: false
          - name: check_or_mate_made_by_a_king
            tags: [custom]
            test_name: accepted_values
            values: [0]
            quote: false
            where: 'piece_name = 1 and castling = 0'
            severity: warn


  - name: stg__mirror_castling
    config:
      contract:
        enforced: true
    columns:
      - name: game_id
        data_type: int64
        tests:
          - unique
          - not_null

      - name: move_num
        data_type: int64
        tests:
          - not_null

      - name: player
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2]
              quote: false

      - name: castling
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2]
              quote: false

      - name: next_move_num
        data_type: int64
        tests:
          - not_null

      - name: next_player
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2]
              quote: false
      
      - name: next_castling
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2]
              quote: false


  - name: stg__win_with_less_captures
    config:
      contract:
        enforced: true
    columns:
      - name: game_id
        data_type: int64
        tests:
          - unique
          - not_null

      - name: event
        data_type: string
        tests:
          - not_null
          - accepted_values:
              values: ['Classical', 'Blitz', 'Bullet']
              severity: warn

      - name: result
        data_type: string
        tests:
          - not_null
          - accepted_values:
              values: ['1-0', '0-1', '1/2-1/2']
              severity: warn

      - name: opening
        data_type: string
        tests:
          - not_null
      
      - name: termination
        data_type: string
        tests:
          - accepted_values:
              values: ['Normal', 'Time forfeit']
              severity: warn

      - name: tournament
        data_type: bool
        tests:
          - not_null

  
  - name: stg__last_move
    config:
      contract:
        enforced: true
    columns:
      - name: game_id
        data_type: int64
        tests:
          - unique
          - not_null

      - name: game_length
        data_type: int64
        tests:
          - not_null

      - name: move
        data_type: string
        tests:
          - not_null

      - name: piece_name
        data_type: int64
        tests:
          - not_null
          - accepted_values:
              values: [1, 2, 3, 4, 5, 6]
              quote: false